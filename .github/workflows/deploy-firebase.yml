# git diff --quiet: exits with status code 1 if there were differences (https://git-scm.com/docs/git-diff)
name: Firebase Deploy

on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      deploy-wbapi:
        required: true
        type: boolean

      deploy-wbtimeline:
        required: true
        type: boolean

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      #
      # Prepare
      #

      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 30 # get 30 of the most recent commits (default is 1)

      - name: Cache turbo build
        uses: dtinth/setup-github-actions-caching-for-turbo@v1

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Get pnpm store path
        id: get-pnpm-store-path
        shell: bash
        run: echo "pnpm-store-path=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.get-pnpm-store-path.outputs.pnpm-store-path }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-store-

      - name: Install Node Dependencies
        run: pnpm install

      - name: Get Playwright's Version
        id: playwright-version
        run: |
          PLAYWRIGHT_VERSION=$(npx playwright --version | sed 's/Version//')
          echo "Playwright Version: $PLAYWRIGHT_VERSION"
          echo "version=$PLAYWRIGHT_VERSION" >> $GITHUB_OUTPUT

      - name: Cache Playwright Browsers
        id: cache-playwright-browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ steps.playwright-version.outputs.version }}

      - name: Install Playwright Browsers
        if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

      #
      # WBAPI
      #

      - name: WBAPI - Check if changed
        id: changed-wbapi
        continue-on-error: true
        run: git diff --quiet ${{ github.event.before }} ${{ github.event.after }} -- apps/wbapi

      - name: WBAPI - Build
        if: steps.changed-wbapi.outcome == 'failure' || inputs.deploy-wbapi
        run: pnpm build --filter @warbrokers/wbapi

      - name: WBAPI - Lint
        if: steps.changed-wbapi.outcome == 'failure' || inputs.deploy-wbapi
        run: pnpm lint --filter @warbrokers/wbapi

      - name: WBAPI - Unit Tests
        if: steps.changed-wbapi.outcome == 'failure' || inputs.deploy-wbapi
        run: pnpm test:unit --filter @warbrokers/wbapi

      - name: WBAPI - Pre Deploy
        if: steps.changed-wbapi.outcome == 'failure' || inputs.deploy-wbapi
        run: pnpm dlx firebase-pnpm-workspaces --filter=@warbrokers/wbapi

      - name: WBAPI - Deploy
        if: steps.changed-wbapi.outcome == 'failure' || inputs.deploy-wbapi
        run: .github/firebase-deploy.sh
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
          PROJECT_PATH: apps/wbapi

      - name: WBAPI - Post Deploy
        if: steps.changed-wbapi.outcome == 'failure' || inputs.deploy-wbapi
        working-directory: apps/wbapi
        run: rm -rf .firebase-pnpm-workspaces && git checkout HEAD -- package.json

      #
      # WB Timeline
      #

      - name: WB Timeline - Check if changed
        id: changed-wbtimeline
        continue-on-error: true
        run: git diff --quiet ${{ github.event.before }} ${{ github.event.after }} -- apps/wbtimeline

      - name: WB Timeline - Build
        if: steps.changed-wbtimeline.outcome == 'failure' || inputs.deploy-wbtimeline
        run: pnpm build --filter @warbrokers/wbtimeline

      - name: WB Timeline - Lint
        if: steps.changed-wbtimeline.outcome == 'failure' || inputs.deploy-wbtimeline
        run: pnpm lint --filter @warbrokers/wbtimeline

      - name: WB Timeline - Deploy
        if: steps.changed-wbtimeline.outcome == 'failure' || inputs.deploy-wbtimeline
        run: .github/firebase-deploy.sh
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
          PROJECT_PATH: apps/wbtimeline
